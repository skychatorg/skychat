services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:${PUBLIC_PORT}"
      - "--api.insecure=true"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=${ADMIN_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
    ports:
      - ${PUBLIC_PORT}:${PUBLIC_PORT}
      - 8085:8080
    volumes:
      - letsencrypt:/letsencrypt:rw
      - ./app/traefik/dynamic.yml:/configuration/dynamic.yml:ro
    env_file:
      - .env

  app:
    container_name: app
    cap_drop:
      - ALL
    build:
      context: .
      args:
        DOCKER_USER: "${DOCKER_USER}"
        DOCKER_UID: "${DOCKER_UID}"
        DOCKER_GID: "${DOCKER_GID}"
        DOCKER_TZ: "${DOCKER_TZ}"
        PUBLIC_URL: "${PUBLIC_URL}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - ./config:/mnt/skychat/config
      - ./backups:/mnt/skychat/backups
      - ./storage:/mnt/skychat/storage
      - ./gallery:/mnt/skychat/gallery
      - ./uploads:/mnt/skychat/uploads
    depends_on:
      - app_db

  app_db:
    container_name: app_db
    restart: always
    build:
      context: ./app/database
      args:
        DOCKER_USER: "${DOCKER_USER}"
        DOCKER_UID: "${DOCKER_UID}"
        DOCKER_GID: "${DOCKER_GID}"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - ./app/database/data:/var/lib/postgresql/data:rw

volumes:
    letsencrypt:
